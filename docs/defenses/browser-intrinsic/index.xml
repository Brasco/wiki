<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Browser Default on XS-Leaks Wiki</title><link>https://xsleaks.com/docs/defenses/browser-intrinsic/</link><description>Recent content in Browser Default on XS-Leaks Wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xsleaks.com/docs/defenses/browser-intrinsic/index.xml" rel="self" type="application/rss+xml"/><item><title>Cross-Origin Read Blocking</title><link>https://xsleaks.com/docs/defenses/browser-intrinsic/corb/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.com/docs/defenses/browser-intrinsic/corb/</guid><description>Explanation # Cross-Origin Read Blocking (CORB) is a browser defense mechanism that prevents attackers from loading certain cross-origin resources in unlikely scenarios 1. This protection was created to prevent speculative side-channel attacks such as Spectre which allow attackers to read the memory of their own process. CORB aims to prevent attackers from loading cross-origin contents which might contain sensitive information into an attacker-controlled process. For instance, if an attacker tries to load an HTML, XML, or JSON as an img or script tag, CORB will prevent this from happening.</description></item><item><title>Partitioned HTTP Cache</title><link>https://xsleaks.com/docs/defenses/browser-intrinsic/partitioned-cache/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.com/docs/defenses/browser-intrinsic/partitioned-cache/</guid><description>Explanation # Cache probing attacks have been present on the web for a long time mainly because browsers HTTP cache is shared across all the websites visited by a user, allowing attackers to interact with it and infer private information from other origins.
Considering Opt-in solutions, applications can use the Vary Header combined with Fetch-Metadata to prevent cross-origin fetches to be affected by the site cache or use some workarounds to protect resources, which come with downsides.</description></item></channel></rss>