<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Application Design on XS-Leaks Wiki</title><link>https://xsleaks.com/docs/defenses/design-protections/</link><description>Recent content in Application Design on XS-Leaks Wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xsleaks.com/docs/defenses/design-protections/index.xml" rel="self" type="application/rss+xml"/><item><title>Subresource Protections</title><link>https://xsleaks.com/docs/defenses/design-protections/subresource-protections/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.com/docs/defenses/design-protections/subresource-protections/</guid><description>Random tokens # One of the principles of protecting subresources is the same as protecting endpoints from CSRF attacks. The difference from CSRF protections is that in the case of XS-Leaks, GET requests are the ones usually worth protecting. To apply this protection applications can append a (cryptographically strong) pseudorandom value, unique to each request/session, to make the URL of a subresource unpredictable to an attacker. The protection can be applied to the following types of subresources:</description></item></channel></rss>